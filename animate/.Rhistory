label = if_else(
abs(temperature) >= temp_threshold & max_y >= y_threshold_995,
"95% CI hit",
""
)
)
label_df
View(label_df)
# plot ----
anim_plot <- ggplot(combined_data, aes(x = genomic_x, y = y,
group = interaction(position, phenotype),
fill = sign, colour = sign)) +
geom_area(alpha = 0.5, position = "identity") +
geom_line(size = 0.6) +
geom_hline(yintercept = 0, colour = "black", size = 0.3) +
scale_x_continuous(
breaks = 1:10,
labels = 1:10,
name = "Genome position\n(variant one)"
) +
scale_y_continuous(name = "Signed posterior density") +
scale_fill_manual(
values = c("-1" = "blue", "0" = "grey70", "1" = "red"),
breaks = c("-1", "0", "1"),
labels = c("protective", "benign", "damaging"),
name = "Effect direction"
) +
scale_colour_manual(
values = c("-1" = "blue", "0" = "grey70", "1" = "red"),
breaks = c("-1", "0", "1"),
labels = c("protective", "benign", "damaging"),
name = "Effect direction"
) +
facet_grid(rows = vars(phenotype)) +
theme(
panel.grid.minor = element_blank(),
# legend.position = "bottom"
) +
geom_text_repel(
data = top_hit_labels,
aes(x = position, y = 0, group = frame),
label = "95% CI hit",
inherit.aes = FALSE,
nudge_y = 0.3,
direction = "y",
segment.size = 0.2,
size = 3,
colour = "black"
) +
transition_states(frame, transition_length = 1, state_length = 0.5) +
labs(title = "{closest_state}")
animated <- animate(anim_plot, fps = 20, duration = 2, width = 8, height = 6, units = "in", res = 120)
anim_save("geno_pheno_scan_animated.gif", animation = animated)
library(ggplot2)
library(dplyr)
library(tidyr)
library(purrr)
library(gganimate)
library(ggrepel)
theme_set(theme_bw())
simulate_posterior_densities <- function(temperature, spread = 0.15, n_points = 200, phenotype_id = "phenotype_1", frame_label = "prior") {
n_pos <- length(temperature)
template_x <- seq(-3, 3, length.out = n_points)
template_y <- dnorm(template_x)
tibble(
position = rep(1:n_pos, each = n_points),
phenotype = phenotype_id,
temperature = rep(temperature, each = n_points),
x = rep(template_x, times = n_pos),
frame = frame_label
) %>%
mutate(
genomic_x = position + x * spread,
sign = sign(temperature),
height = abs(temperature),
y = height * dnorm(x) * sign
) %>%
mutate(sign = as.character(sign))
}
# Empirical priors
temperature_list_prior <- list(
"phenotype 1" = c(0.1, 0.2, -0.3, 0.13, -0.125, 0.9, 0.3, 0.99, -0.01, 0.2),
"phenotype 2" = c(-0.1, 0.0, 0.1, -0.2, 0.3, -0.6, -0.4, 0.1, 0.2, -0.3),
"phenotype 3" = c(0.2, 0.1, -0.1, -0.3, -0.15, -0.2, -0.3, -0.2, 0.05, 0.1),
"phenotype 4" = c(0.0, 0.05, -0.05, 0.02, -0.02, 0.01, -0.01, 0.03, -0.03, 0.04)
)
# Posterior after observing patient data
temperature_list_post <- list(
"phenotype 1" = c(0.01, 0.02, -0.03, 0.01, -0.02, 0.03, 0.01, 0.99, -0.01, 0.02),
"phenotype 2" = c(-0.01, 0.00, 0.02, -0.01, 0.01, -0.01, -0.02, 0.01, 0.03, -0.01),
"phenotype 3" = c(0.02, 0.01, -0.01, -0.03, -0.01, -0.02, -0.01, -0.02, 0.01, 0.02),
"phenotype 4" = c(0.00, 0.01, -0.01, 0.00, -0.01, 0.01, -0.01, 0.02, -0.02, 0.01)
)
prior_data <- map2_dfr(temperature_list_prior, names(temperature_list_prior), ~simulate_posterior_densities(.x, phenotype_id = .y, frame_label = "Empirical prior"))
post_data  <- map2_dfr(temperature_list_post, names(temperature_list_post), ~simulate_posterior_densities(.x, phenotype_id = .y, frame_label = "Posterior"))
combined_data <- bind_rows(prior_data, post_data)
# threshold ----
normal_density_995 <- dnorm(qnorm(0.995))  # ≈ 0.039
temp_threshold <- 0.5  # apply direct temp cutoff
y_threshold_995 <- temp_threshold * normal_density_995
# label all positions, blank by default
label_df <- combined_data %>%
group_by(phenotype, position, frame) %>%
summarise(
max_y = max(abs(y)),
temperature = first(temperature),
.groups = "drop"
) %>%
mutate(
label = if_else(
abs(temperature) >= temp_threshold & max_y >= y_threshold_995,
"95% CI hit",
""
)
)
# # true 99.5% CI top hits based on temperature
# z_995 <- qnorm(0.995)  # 99.5% CI # ≈ 2.576
# z_995 <- qnorm(0.975)  # 95% CI
#
# top_hit_labels <- combined_data %>%
#   filter(abs(temperature) >= z_995) %>%
#   group_by(phenotype, position, frame) %>%
#   summarise(max_y = max(abs(y)), .groups = "drop") %>%
#   mutate(label = "top hit")
# plot ----
anim_plot <- ggplot(combined_data, aes(x = genomic_x, y = y,
group = interaction(position, phenotype),
fill = sign, colour = sign)) +
geom_area(alpha = 0.5, position = "identity") +
geom_line(size = 0.6) +
geom_hline(yintercept = 0, colour = "black", size = 0.3) +
scale_x_continuous(
breaks = 1:10,
labels = 1:10,
name = "Genome position\n(variant one)"
) +
scale_y_continuous(name = "Signed posterior density") +
scale_fill_manual(
values = c("-1" = "red", "0" = "grey70", "1" = "blue"),
breaks = c("1", "0", "-1"),
labels = c("damaging", "benign", "protective"),
name = "Effect direction"
) +
scale_colour_manual(
values = c("-1" = "red", "0" = "grey70", "1" = "blue"),
breaks = c("1", "0", "-1"),
labels = c("damaging", "benign", "protective"),
name = "Effect direction"
) +
facet_grid(rows = vars(phenotype)) +
theme(
panel.grid.minor = element_blank(),
# legend.position = "bottom"
) +
geom_text_repel(
data = top_hit_labels,
aes(x = position, y = 0, group = frame),
label = "95% CI hit",
inherit.aes = FALSE,
nudge_y = 0.3,
direction = "y",
segment.size = 0.2,
size = 3,
colour = "black"
) +
transition_states(frame, transition_length = 1, state_length = 0.5) +
labs(title = "{closest_state}")
# anim_save("posterior_transition.gif", anim_plot, width = 10, height = 6, units = "in", res = 120)
animated <- animate(anim_plot, fps = 20, duration = 2, width = 8, height = 6, units = "in", res = 120)
anim_save("geno_pheno_scan_animated.gif", animation = animated)
library(ggplot2)
library(dplyr)
library(tidyr)
library(purrr)
library(gganimate)
library(ggrepel)
theme_set(theme_bw())
simulate_posterior_densities <- function(temperature, spread = 0.15, n_points = 200, phenotype_id = "phenotype_1", frame_label = "prior") {
n_pos <- length(temperature)
template_x <- seq(-3, 3, length.out = n_points)
template_y <- dnorm(template_x)
tibble(
position = rep(1:n_pos, each = n_points),
phenotype = phenotype_id,
temperature = rep(temperature, each = n_points),
x = rep(template_x, times = n_pos),
frame = frame_label
) %>%
mutate(
genomic_x = position + x * spread,
sign = sign(temperature),
height = abs(temperature),
y = height * dnorm(x) * sign
) %>%
mutate(sign = as.character(sign))
}
# Empirical priors
temperature_list_prior <- list(
"phenotype 1" = c(0.1, 0.2, -0.3, 0.13, -0.125, 0.9, 0.3, 0.99, -0.01, 0.2),
"phenotype 2" = c(-0.1, 0.0, 0.1, -0.2, 0.3, -0.6, -0.4, 0.1, 0.2, -0.3),
"phenotype 3" = c(0.2, 0.1, -0.1, -0.3, -0.15, -0.2, -0.3, -0.2, 0.05, 0.1),
"phenotype 4" = c(0.0, 0.05, -0.05, 0.02, -0.02, 0.01, -0.01, 0.03, -0.03, 0.04)
)
# Posterior after observing patient data
temperature_list_post <- list(
"phenotype 1" = c(0.01, 0.02, -0.03, 0.01, -0.02, 0.03, 0.01, 0.99, -0.01, 0.02),
"phenotype 2" = c(-0.01, 0.00, 0.02, -0.01, 0.01, -0.01, -0.02, 0.01, 0.03, -0.01),
"phenotype 3" = c(0.02, 0.01, -0.01, -0.03, -0.01, -0.02, -0.01, -0.02, 0.01, 0.02),
"phenotype 4" = c(0.00, 0.01, -0.01, 0.00, -0.01, 0.01, -0.01, 0.02, -0.02, 0.01)
)
prior_data <- map2_dfr(temperature_list_prior, names(temperature_list_prior), ~simulate_posterior_densities(.x, phenotype_id = .y, frame_label = "Empirical prior"))
post_data  <- map2_dfr(temperature_list_post, names(temperature_list_post), ~simulate_posterior_densities(.x, phenotype_id = .y, frame_label = "Posterior"))
combined_data <- bind_rows(prior_data, post_data)
# threshold ----
normal_density_995 <- dnorm(qnorm(0.995))  # ≈ 0.039
temp_threshold <- 0.5  # apply direct temp cutoff
y_threshold_995 <- temp_threshold * normal_density_995
# label all positions, blank by default
label_df <- combined_data %>%
group_by(phenotype, position, frame) %>%
summarise(
max_y = max(abs(y)),
temperature = first(temperature),
.groups = "drop"
) %>%
mutate(
label = if_else(
abs(temperature) >= temp_threshold & max_y >= y_threshold_995,
"95% CI hit",
""
)
)
# # true 99.5% CI top hits based on temperature
# z_995 <- qnorm(0.995)  # 99.5% CI # ≈ 2.576
# z_995 <- qnorm(0.975)  # 95% CI
#
# top_hit_labels <- combined_data %>%
#   filter(abs(temperature) >= z_995) %>%
#   group_by(phenotype, position, frame) %>%
#   summarise(max_y = max(abs(y)), .groups = "drop") %>%
#   mutate(label = "top hit")
# plot ----
anim_plot <- ggplot(combined_data, aes(x = genomic_x, y = y,
group = interaction(position, phenotype),
fill = sign, colour = sign)) +
geom_area(alpha = 0.5, position = "identity") +
geom_line(size = 0.6) +
geom_hline(yintercept = 0, colour = "black", size = 0.3) +
scale_x_continuous(
breaks = 1:10,
labels = 1:10,
name = "Genome position\n(variant one)"
) +
scale_y_continuous(name = "Signed posterior density") +
scale_fill_manual(
values = c("-1" = "red", "0" = "grey70", "1" = "blue"),
breaks = c("1", "0", "-1"),
labels = c("damaging", "benign", "protective"),
name = "Effect direction"
) +
scale_colour_manual(
values = c("-1" = "red", "0" = "grey70", "1" = "blue"),
breaks = c("1", "0", "-1"),
labels = c("damaging", "benign", "protective"),
name = "Effect direction"
) +
facet_grid(rows = vars(phenotype)) +
theme(
panel.grid.minor = element_blank(),
) +
geom_text_repel(
data = label_df,
aes(x = position, y = 0, label = label, group = interaction(phenotype, position, frame)),
inherit.aes = FALSE,
nudge_y = 0.3,
direction = "y",
segment.size = 0.2,
size = 3,
colour = "black"
)
transition_states(frame, transition_length = 1, state_length = 0.5) +
labs(title = "{closest_state}")
library(ggplot2)
library(dplyr)
library(tidyr)
library(purrr)
library(gganimate)
library(ggrepel)
theme_set(theme_bw())
simulate_posterior_densities <- function(temperature, spread = 0.15, n_points = 200, phenotype_id = "phenotype_1", frame_label = "prior") {
n_pos <- length(temperature)
template_x <- seq(-3, 3, length.out = n_points)
template_y <- dnorm(template_x)
tibble(
position = rep(1:n_pos, each = n_points),
phenotype = phenotype_id,
temperature = rep(temperature, each = n_points),
x = rep(template_x, times = n_pos),
frame = frame_label
) %>%
mutate(
genomic_x = position + x * spread,
sign = sign(temperature),
height = abs(temperature),
y = height * dnorm(x) * sign
) %>%
mutate(sign = as.character(sign))
}
# Empirical priors
temperature_list_prior <- list(
"phenotype 1" = c(0.1, 0.2, -0.3, 0.13, -0.125, 0.9, 0.3, 0.99, -0.01, 0.2),
"phenotype 2" = c(-0.1, 0.0, 0.1, -0.2, 0.3, -0.6, -0.4, 0.1, 0.2, -0.3),
"phenotype 3" = c(0.2, 0.1, -0.1, -0.3, -0.15, -0.2, -0.3, -0.2, 0.05, 0.1),
"phenotype 4" = c(0.0, 0.05, -0.05, 0.02, -0.02, 0.01, -0.01, 0.03, -0.03, 0.04)
)
# Posterior after observing patient data
temperature_list_post <- list(
"phenotype 1" = c(0.01, 0.02, -0.03, 0.01, -0.02, 0.03, 0.01, 0.99, -0.01, 0.02),
"phenotype 2" = c(-0.01, 0.00, 0.02, -0.01, 0.01, -0.01, -0.02, 0.01, 0.03, -0.01),
"phenotype 3" = c(0.02, 0.01, -0.01, -0.03, -0.01, -0.02, -0.01, -0.02, 0.01, 0.02),
"phenotype 4" = c(0.00, 0.01, -0.01, 0.00, -0.01, 0.01, -0.01, 0.02, -0.02, 0.01)
)
prior_data <- map2_dfr(temperature_list_prior, names(temperature_list_prior), ~simulate_posterior_densities(.x, phenotype_id = .y, frame_label = "Empirical prior"))
post_data  <- map2_dfr(temperature_list_post, names(temperature_list_post), ~simulate_posterior_densities(.x, phenotype_id = .y, frame_label = "Posterior"))
combined_data <- bind_rows(prior_data, post_data)
# threshold ----
normal_density_995 <- dnorm(qnorm(0.995))  # ≈ 0.039
temp_threshold <- 0.5  # apply direct temp cutoff
y_threshold_995 <- temp_threshold * normal_density_995
# label all positions, blank by default
label_df <- combined_data %>%
group_by(phenotype, position, frame) %>%
summarise(
max_y = max(abs(y)),
temperature = first(temperature),
.groups = "drop"
) %>%
mutate(
label = if_else(
abs(temperature) >= temp_threshold & max_y >= y_threshold_995,
"95% CI hit",
""
)
)
# # true 99.5% CI top hits based on temperature
# z_995 <- qnorm(0.995)  # 99.5% CI # ≈ 2.576
# z_995 <- qnorm(0.975)  # 95% CI
#
# top_hit_labels <- combined_data %>%
#   filter(abs(temperature) >= z_995) %>%
#   group_by(phenotype, position, frame) %>%
#   summarise(max_y = max(abs(y)), .groups = "drop") %>%
#   mutate(label = "top hit")
# plot ----
anim_plot <- ggplot(combined_data, aes(x = genomic_x, y = y,
group = interaction(position, phenotype),
fill = sign, colour = sign)) +
geom_area(alpha = 0.5, position = "identity") +
geom_line(size = 0.6) +
geom_hline(yintercept = 0, colour = "black", size = 0.3) +
scale_x_continuous(
breaks = 1:10,
labels = 1:10,
name = "Genome position\n(variant one)"
) +
scale_y_continuous(name = "Signed posterior density") +
scale_fill_manual(
values = c("-1" = "red", "0" = "grey70", "1" = "blue"),
breaks = c("1", "0", "-1"),
labels = c("damaging", "benign", "protective"),
name = "Effect direction"
) +
scale_colour_manual(
values = c("-1" = "red", "0" = "grey70", "1" = "blue"),
breaks = c("1", "0", "-1"),
labels = c("damaging", "benign", "protective"),
name = "Effect direction"
) +
facet_grid(rows = vars(phenotype)) +
theme(
panel.grid.minor = element_blank(),
) +
geom_text_repel(
data = label_df,
aes(x = position, y = 0, label = label, group = interaction(phenotype, position, frame)),
inherit.aes = FALSE,
nudge_y = 0.3,
direction = "y",
segment.size = 0.2,
size = 3,
colour = "black"
) +
transition_states(frame, transition_length = 1, state_length = 0.5) +
labs(title = "{closest_state}")
# anim_save("posterior_transition.gif", anim_plot, width = 10, height = 6, units = "in", res = 120)
animated <- animate(anim_plot, fps = 20, duration = 2, width = 8, height = 6, units = "in", res = 120)
anim_save("geno_pheno_scan_animated.gif", animation = animated)
library(ggplot2)
library(dplyr)
library(tidyr)
library(purrr)
library(gganimate)
library(ggrepel)
theme_set(theme_bw())
simulate_posterior_densities <- function(temperature, spread = 0.15, n_points = 200, phenotype_id = "phenotype_1", frame_label = "prior") {
n_pos <- length(temperature)
template_x <- seq(-3, 3, length.out = n_points)
template_y <- dnorm(template_x)
tibble(
position = rep(1:n_pos, each = n_points),
phenotype = phenotype_id,
temperature = rep(temperature, each = n_points),
x = rep(template_x, times = n_pos),
frame = frame_label
) %>%
mutate(
genomic_x = position + x * spread,
sign = sign(temperature),
height = abs(temperature),
y = height * dnorm(x) * sign
) %>%
mutate(sign = as.character(sign))
}
# Empirical priors
temperature_list_prior <- list(
"phenotype 1" = c(0.1, 0.2, -0.3, 0.13, -0.125, 0.9, 0.3, 0.99, -0.01, 0.2),
"phenotype 2" = c(-0.1, 0.0, 0.1, -0.2, 0.3, -0.6, -0.4, 0.1, 0.2, -0.3),
"phenotype 3" = c(0.2, 0.1, -0.1, -0.3, -0.15, -0.2, -0.3, -0.2, 0.05, 0.1),
"phenotype 4" = c(0.0, 0.05, -0.05, 0.02, -0.02, 0.01, -0.01, 0.03, -0.03, 0.04)
)
# Posterior after observing patient data
temperature_list_post <- list(
"phenotype 1" = c(0.01, 0.02, -0.03, 0.01, -0.02, 0.03, 0.01, 0.99, -0.01, 0.02),
"phenotype 2" = c(-0.01, 0.00, 0.02, -0.01, 0.01, -0.01, -0.02, 0.01, 0.03, -0.01),
"phenotype 3" = c(0.02, 0.01, -0.01, -0.03, -0.01, -0.02, -0.01, -0.02, 0.01, 0.02),
"phenotype 4" = c(0.00, 0.01, -0.01, 0.00, -0.01, 0.01, -0.01, 0.02, -0.02, 0.01)
)
prior_data <- map2_dfr(temperature_list_prior, names(temperature_list_prior), ~simulate_posterior_densities(.x, phenotype_id = .y, frame_label = "Empirical prior"))
post_data  <- map2_dfr(temperature_list_post, names(temperature_list_post), ~simulate_posterior_densities(.x, phenotype_id = .y, frame_label = "Posterior"))
combined_data <- bind_rows(prior_data, post_data)
# threshold ----
normal_density_995 <- dnorm(qnorm(0.995))  # ≈ 0.039
temp_threshold <- 0.5  # apply direct temp cutoff
y_threshold_995 <- temp_threshold * normal_density_995
# label all positions, blank by default
label_df <- combined_data %>%
group_by(phenotype, position, frame) %>%
summarise(
max_y = max(abs(y)),
temperature = first(temperature),
.groups = "drop"
) %>%
mutate(
label = if_else(
abs(temperature) >= temp_threshold & max_y >= y_threshold_995,
"95% CI hit",
""
)
)
# # true 99.5% CI top hits based on temperature
# z_995 <- qnorm(0.995)  # 99.5% CI # ≈ 2.576
# z_995 <- qnorm(0.975)  # 95% CI
#
# top_hit_labels <- combined_data %>%
#   filter(abs(temperature) >= z_995) %>%
#   group_by(phenotype, position, frame) %>%
#   summarise(max_y = max(abs(y)), .groups = "drop") %>%
#   mutate(label = "top hit")
# plot ----
anim_plot <- ggplot(combined_data, aes(x = genomic_x, y = y,
group = interaction(position, phenotype),
fill = sign, colour = sign)) +
geom_area(alpha = 0.5, position = "identity") +
geom_line(size = 0.6) +
geom_hline(yintercept = 0, colour = "black", size = 0.3) +
scale_x_continuous(
breaks = 1:10,
labels = 1:10,
name = "Genome position\n(variant one)"
) +
scale_y_continuous(name = "Signed posterior density") +
scale_fill_manual(
values = c("1" = "red", "0" = "grey70", "-1" = "blue"),
breaks = c("1", "0", "-1"),
labels = c("damaging", "benign", "protective"),
name = "Effect direction"
) +
scale_colour_manual(
values = c("1" = "red", "0" = "grey70", "-1" = "blue"),
breaks = c("1", "0", "-1"),
labels = c("damaging", "benign", "protective"),
name = "Effect direction"
) +
facet_grid(rows = vars(phenotype)) +
theme(
panel.grid.minor = element_blank(),
) +
geom_text_repel(
data = label_df,
aes(x = position, y = 0, label = label, group = interaction(phenotype, position, frame)),
inherit.aes = FALSE,
nudge_y = 0.3,
direction = "y",
segment.size = 0.2,
size = 3,
colour = "black"
) +
transition_states(frame, transition_length = 1, state_length = 0.5) +
labs(title = "{closest_state}")
# anim_save("posterior_transition.gif", anim_plot, width = 10, height = 6, units = "in", res = 120)
animated <- animate(anim_plot, fps = 20, duration = 2, width = 8, height = 6, units = "in", res = 120)
anim_save("geno_pheno_scan_animated.gif", animation = animated)
