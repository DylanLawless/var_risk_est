
Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Processing chromosome: 1

── Column specification ────────────────────────────────────────────────────────
cols(
  .default = col_character(),
  X1 = col_double(),
  X2 = col_double(),
  X8 = col_double(),
  X9 = col_double(),
  X10 = col_double(),
  X11 = col_double(),
  X12 = col_double(),
  X31 = col_double(),
  X32 = col_double(),
  X128 = col_double(),
  X129 = col_double(),
  X130 = col_double(),
  X131 = col_double(),
  X132 = col_double(),
  X133 = col_double(),
  X134 = col_double(),
  X135 = col_double(),
  X136 = col_double(),
  X137 = col_double(),
  X149 = col_double()
  # ... with 32 more columns
)
ℹ Use `spec()` for the full column specifications.

Processing chromosome: 2

── Column specification ────────────────────────────────────────────────────────
cols(
  X1 = col_character()
)

Processing chromosome: 3

── Column specification ────────────────────────────────────────────────────────
cols(
  .default = col_character(),
  X1 = col_double(),
  X2 = col_double(),
  X8 = col_double(),
  X9 = col_double(),
  X10 = col_double(),
  X11 = col_double(),
  X39 = col_double(),
  X42 = col_double(),
  X45 = col_double(),
  X48 = col_double(),
  X50 = col_double(),
  X51 = col_double(),
  X53 = col_double(),
  X55 = col_double(),
  X63 = col_double(),
  X66 = col_double(),
  X69 = col_double(),
  X70 = col_double(),
  X71 = col_double(),
  X72 = col_logical()
  # ... with 74 more columns
)
ℹ Use `spec()` for the full column specifications.

Processing chromosome: 4

── Column specification ────────────────────────────────────────────────────────
cols(
  X1 = col_character()
)

Processing chromosome: 5
Processing chromosome: 6

── Column specification ────────────────────────────────────────────────────────
cols(
  X1 = col_character()
)

Processing chromosome: 7

── Column specification ────────────────────────────────────────────────────────
cols(
  .default = col_character(),
  X1 = col_double(),
  X2 = col_double(),
  X8 = col_double(),
  X9 = col_double(),
  X10 = col_double(),
  X11 = col_double(),
  X12 = col_double(),
  X27 = col_double(),
  X31 = col_double(),
  X32 = col_double(),
  X38 = col_double(),
  X39 = col_double(),
  X41 = col_double(),
  X42 = col_double(),
  X44 = col_double(),
  X45 = col_double(),
  X47 = col_double(),
  X48 = col_double(),
  X50 = col_double(),
  X51 = col_double()
  # ... with 133 more columns
)
ℹ Use `spec()` for the full column specifications.

Processing chromosome: 8

── Column specification ────────────────────────────────────────────────────────
cols(
  X1 = col_character()
)

Processing chromosome: 9
Processing chromosome: 10
Processing chromosome: 11

── Column specification ────────────────────────────────────────────────────────
cols(
  X1 = col_character()
)

Processing chromosome: 12

── Column specification ────────────────────────────────────────────────────────
cols(
  .default = col_character(),
  X1 = col_double(),
  X2 = col_double(),
  X8 = col_double(),
  X9 = col_double(),
  X10 = col_double(),
  X11 = col_double(),
  X12 = col_double(),
  X27 = col_double(),
  X31 = col_double(),
  X32 = col_double(),
  X38 = col_double(),
  X39 = col_double(),
  X41 = col_double(),
  X42 = col_double(),
  X55 = col_double(),
  X62 = col_double(),
  X63 = col_double(),
  X64 = col_logical(),
  X65 = col_double(),
  X66 = col_double()
  # ... with 88 more columns
)
ℹ Use `spec()` for the full column specifications.

Processing chromosome: 13

── Column specification ────────────────────────────────────────────────────────
cols(
  X1 = col_character()
)

Processing chromosome: 14
Processing chromosome: 15
Processing chromosome: 16
Processing chromosome: 17
Processing chromosome: 18

── Column specification ────────────────────────────────────────────────────────
cols(
  X1 = col_character()
)

Processing chromosome: 19

── Column specification ────────────────────────────────────────────────────────
cols(
  .default = col_character(),
  X1 = col_double(),
  X2 = col_double(),
  X8 = col_double(),
  X9 = col_double(),
  X10 = col_double(),
  X11 = col_double(),
  X12 = col_double(),
  X27 = col_logical(),
  X31 = col_double(),
  X32 = col_double(),
  X77 = col_double(),
  X78 = col_double(),
  X79 = col_logical(),
  X111 = col_double(),
  X112 = col_double(),
  X128 = col_double(),
  X129 = col_double(),
  X130 = col_double(),
  X131 = col_double(),
  X132 = col_double()
  # ... with 40 more columns
)
ℹ Use `spec()` for the full column specifications.

Processing chromosome: 20

── Column specification ────────────────────────────────────────────────────────
cols(
  X1 = col_character()
)

Processing chromosome: 21
Processing chromosome: 22

── Column specification ────────────────────────────────────────────────────────
cols(
  X1 = col_character()
)

Processing chromosome: X
Processing chromosome: Y

── Column specification ────────────────────────────────────────────────────────
cols(
  X1 = col_character()
)

Processing chromosome: M

── Column specification ────────────────────────────────────────────────────────
cols(
  X1 = col_character()
)

Error in sort.list(bx[m$xi]) : 
  'x' must be atomic for 'sort.list', method "shell" and "quick"
Have you called 'sort' on a list?
Calls: merge -> merge.data.frame -> [ -> [.data.frame -> sort.list
Execution halted
